package ceshi;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFComment;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import javafx.scene.control.Cell;
import jxl.Sheet;

public class getExcel {
	String v1;
	String v2;
	String  v3;
	String  v4;
	String  v5;
	String  v6;
	public static void getExcel () throws IOException{
		InputStream is = new FileInputStream("F:\\新建文件夹 (2)\\新建文件夹\\六期室内星(1).xlsx");
        XSSFWorkbook xssfWorkbook = new XSSFWorkbook(is);            
        XSSFSheet xssfSheet = xssfWorkbook.getSheetAt(0);
          int lie=xssfSheet.getRow(0).getPhysicalNumberOfCells();//获取所有的列
          int row = xssfSheet.getLastRowNum(); //获取所有的行
          System.out.println(lie);
           for (int rowNum = 1; rowNum <=row ; rowNum++) {
        	   //获取行内容
                XSSFRow xssfRow = xssfSheet.getRow(rowNum);
                if (xssfRow != null) {
                	//获取第4列内容
                   XSSFCell one = xssfRow.getCell(4);            
                   one.setCellType(org.apache.poi.ss.usermodel.Cell.CELL_TYPE_STRING);
                   //获取当前行里指定列的内容
                   int n = 0;               
                   if("1".equals(one.toString()) || "0".equals(one.toString())){
                    	 String[] s = new String[7];
                    	for(int i=0;i<7;i++){
                    		one = xssfRow.getCell(i+4);             
                              one.setCellType(org.apache.poi.ss.usermodel.Cell.CELL_TYPE_STRING);
                    		s[i] = one.toString();
                    		System.out.println( one.toString());
                    	 }
                    }

               }
           // }
        }
        /*
        //转换数据格式
       String getValue(XSSFCell xssfRow) {

        if (xssfRow.getCellType() == xssfRow.CELL_TYPE_BOOLEAN) {
            return String.valueOf(xssfRow.getBooleanCellValue());
        } else if (xssfRow.getCellType() == xssfRow.CELL_TYPE_NUMERIC) {
            return String.valueOf(xssfRow.getNumericCellValue());
        } else {
            return String.valueOf(xssfRow.getStringCellValue());
        }
    }
    */
	}
}
